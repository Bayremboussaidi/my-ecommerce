version: '3.8'

services:
  # ========================
  # Datenbanken
  # ========================
  postgres:
    container_name: ms_pg_sql
    image: postgres:15
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: ecommerce
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - microservices-net
    restart: unless-stopped

  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - microservices-net
    restart: unless-stopped

  mongodb:
    container_name: ms_mongo_db
    image: mongo:6
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - mongo:/data/db
    ports:
      - "27017:27017"
    networks:
      - microservices-net
    restart: unless-stopped

  mongo-express:
    container_name: mongo_express
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_SERVER: mongodb
    ports:
      - "8081:8081"
    networks:
      - microservices-net
    depends_on:
      - mongodb
    restart: unless-stopped

  # ========================
  # Kafka & Zookeeper
  # ========================
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-net

  kafka:
    container_name: ms_kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - microservices-net

  # ========================
  # Mail & Zipkin
  # ========================
  mail-dev:
    container_name: ms_mail_dev
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - microservices-net
    restart: unless-stopped

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net
    restart: unless-stopped

  # ========================
  # Keycloak
  # ========================
  keycloak:
    container_name: keycloak-ms
    image: quay.io/keycloak/keycloak:latest
    ports:
      - "9098:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    networks:
      - microservices-net
    restart: unless-stopped

  # ========================
  # Config Server
  # ========================
  config-server:
    container_name: config-server
    build: ./config-server
    ports:
      - "8888:8888"
    networks:
      - microservices-net
    depends_on:
      - postgres
      - mongodb

  # ========================
  # Eureka / Discovery Server
  # ========================
  discovery-server:
    container_name: discovery-server
    build: ./discovery-server
    ports:
      - "8761:8761"
    networks:
      - microservices-net
    depends_on:
      - config-server

  # ========================
  # API Gateway
  # ========================
  gateway-service:
    container_name: gateway-service
    build: ./gateway-service
    ports:
      - "8222:8222"
    networks:
      - microservices-net
    depends_on:
      - discovery-server
      - config-server
      - keycloak

  # ========================
  # Microservices
  # ========================
  customer-service:
    container_name: customer-service
    build: ./customer-service
    ports:
      - "8090:8090"
    networks:
      - microservices-net
    depends_on:
      - config-server
      - discovery-server
      - mongodb

  order-service:
    container_name: order-service
    build: ./order-service
    ports:
      - "8091:8091"
    networks:
      - microservices-net
    depends_on:
      - config-server
      - discovery-server
      - postgres
      - kafka

  product-service:
    container_name: product-service
    build: ./product-service
    ports:
      - "8092:8092"
    networks:
      - microservices-net
    depends_on:
      - config-server
      - discovery-server
      - postgres

  payment-service:
    container_name: payment-service
    build: ./payment-service
    ports:
      - "8093:8093"
    networks:
      - microservices-net
    depends_on:
      - config-server
      - discovery-server
      - postgres
      - kafka

# ========================
# Netzwerke & Volumes
# ========================
networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mongo:
